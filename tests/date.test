#!/bin/bash

[ -f testing.sh ] && . testing.sh

#testing "name" "command" "result" "infile" "stdin"

# Test Unix date parsing.
testing "-d @0" "TZ=UTC date -d @0 2>&1" "Thu Jan  1 00:00:00 GMT 1970\n" "" ""
testing "-d @0x123" "TZ=UTC date -d @0x123 2>&1" "date: bad date '@0x123'\n" "" ""

# Test basic date parsing.
# Note that toybox's -d format is not the same as coreutils'.
testing "-d 06021234" "TZ=UTC date -d 06021234 2>&1" "Sun Jun  2 12:34:00 UTC 1900\n" "" ""
testing "-d 060212341982" "TZ=UTC date -d 060212341982 2>&1" "Sun Jun  2 12:34:00 UTC 1982\n" "" ""
testing "-d 123" "TZ=UTC date -d 123 2>&1" "date: bad date '123'\n" "" ""

# Test parsing 2- and 4-digit years.
testing "-d 1110143115.30" "TZ=UTC date -d 1110143115.30 2>&1" "Sun Nov 10 14:31:30 UTC 1915\n" "" ""
testing "-d 111014312015.30" "TZ=UTC date -d 111014312015.30 2>&1" "Sun Nov 10 14:31:30 UTC 2015\n" "" ""

# Accidentally given a Unix time, we should trivially reject that.
testing "Unix time missing @" "TZ=UTC date 1438053157 2>/dev/null || echo no" \
  "no\n" "" ""
# But some invalid dates are more subtle, like Febuary 29th in a non-leap year.
testing "Feb 29th" "TZ=UTC date 022900001975 2>/dev/null || echo no" \
  "no\n" "" ""
